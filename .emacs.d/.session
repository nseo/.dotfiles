;;; Automatically generated on Wed May  2 05:07:02 2012
;;; Invoked by sonots@localhost.localdomain using 23.1.1
(setq-default kill-ring '(#("               
" 0 16 (fontified t face font-lock-comment-face)) #("
" 0 1 (fontified t)) #("☆" 0 1 (fontified t)) #("                                                                 
" 0 66 (fontified t))))
(setq-default session-file-alist '(("~/.dotfiles/.emacs.d/init.el" 2647 5701 1 nil nil 2647 (overwrite-mode)) ("~/.dotfiles/.bash_profile" 403 nil 1 nil nil 374 (overwrite-mode)) ("~/reST/nsp-docs/_themes/bootstrap/static/bootstrap.css" 9534 6753 1 nil nil 6867 (overwrite-mode)) ("~/reST/nsp-docs/Acapulco/Review.rst" 18807 1049 1 nil nil 19222 (overwrite-mode)) ("~/reST/nsp-docs/Acapulco.rst" 927 927 1 nil nil 927 (overwrite-mode)) ("~/reST/nsp-docs/Binsuke/Test/Random.rst" 6954 nil 1 nil nil 7135 (overwrite-mode)) ("~/reST/nsp-docs/Borabora/ExternalDesign/API_U.rst" 15410 15409 1 nil nil 15410 (overwrite-mode)) ("~/reST/nsp-docs/Borabora/ExternalDesign/API_O.rst" 13545 3096 1 nil nil 13545 (overwrite-mode)) ("~/reST/trac_to_sphinx/format.rb" 5867 5017 1 nil nil 5867 (overwrite-mode)) ("~/code/borabora_api/spec/controllers/create_devices_spec.rb" 1075 4162 1 nil nil 1801 (overwrite-mode)) ("~/code/borabora_api/spec/support/device_examples.rb" 999 nil 1 nil nil 1024 (overwrite-mode)) ("~/trac_wiki_to_rest/convert.rb" 703 345 1 nil nil 1835 (overwrite-mode)) ("~/code/borabora_api/app/controllers/users_controller.rb" 8883 8996 1 nil nil 8996 (overwrite-mode)) ("~/code/borabora_api/spec/controllers/destroy_users_spec.rb" 213 nil 1 nil nil 218 (overwrite-mode)) ("~/code/borabora_api/lib/ssoadm.rb" 676 1268 1 nil nil 1418 (overwrite-mode)) ("~/code/borabora_api/spec/models/organization_spec.rb" 147 337 1 nil nil 143 (overwrite-mode)) ("~/code/borabora_api/app/models/organization.rb" 2057 3669 1 nil nil 3789 (overwrite-mode)) ("~/code/borabora_api/spec/controllers/create_organizations_spec.rb" 3077 3147 1 nil nil 3144 (overwrite-mode)) ("~/code/borabora_api/spec/controllers/show_me_users_spec.rb" 356 nil 1 nil nil 356 (overwrite-mode)) ("~/code/borabora_api/db/seeds.rb" 1765 1179 1 nil nil 1827 (overwrite-mode)) ("~/code/borabora_api/app/controllers/application_controller.rb" 2477 3610 1 nil nil 588 (overwrite-mode)) ("~/code/borabora_api/spec/controllers/destroy_organizations_spec.rb" 4808 4227 1 nil nil 4808 (overwrite-mode)) ("~/code/borabora_api/spec/models/organization/destroy_with_realm_spec.rb" 4104 3912 1 nil nil 4104 (overwrite-mode)) ("~/code/borabora_api/spec/support/organization_examples.rb" 1501 1205 1 nil nil 1685 (overwrite-mode)) ("~/code/borabora_api/spec/models/organization_with_realm_spec.rb" 960 48 1 nil nil 7663 (overwrite-mode)) ("~/code/borabora_api/spec/support/common_helper.rb" 82 nil 1 nil nil 82 (overwrite-mode)) ("~/code/borabora_api/app/controllers/organizations_controller.rb" 2312 1362 1 nil nil 1413 (overwrite-mode)) ("~/code/borabora_api/config/initializers/rails_config.rb" 192 nil 1 nil nil 192 (overwrite-mode)) ("~/code/borabora_api/lib/ssoadm_client.rb" 5 nil 1 nil nil 44 (overwrite-mode)) ("~/code/borabora_api/spec/models/user_authenticatable_spec.rb" 3316 4106 1 nil nil 4227 (overwrite-mode)) ("~/code/borabora_api/spec/controllers/login_user_spec.rb" 5687 5345 1 nil nil 5888 (overwrite-mode)) ("~/code/borabora_api/spec/models/user_spec.rb" 8457 8777 1 nil nil 8528 (overwrite-mode)) ("~/code/borabora_api/spec/controllers/show_users_spec.rb" 603 905 1 nil nil 655 (overwrite-mode)) ("~/code/borabora_api/app/models/user/recursive.rb" 474 387 1 nil nil 375 (overwrite-mode)) ("~/code/borabora_api/app/models/user/authenticatable.rb" 1100 1218 1 nil nil 857 (overwrite-mode)) ("~/code/borabora_worker/bin/auth_worker.rb" 1256 1121 1 nil nil 866 (overwrite-mode)) ("~/code/openam/products/amserver/source/com/sun/identity/cli/SessionCommand.java" 12658 12595 1 nil nil 12785 (overwrite-mode)) ("~/code/borabora_worker/README.md" 639 309 1 nil nil 724 (overwrite-mode)) ("~/code/borabora_worker/bin/worker" 1859 1680 1 nil nil 1858 (overwrite-mode)) ("~/code/borabora_worker/bin/borabora_worker.rb" 1129 1393 1 nil nil 1495 (overwrite-mode)) ("~/code/openam/products/amserver/source/com/iplanet/dpro/session/service/SessionService.java" 36605 36630 1 nil nil 36664 (overwrite-mode)) ("~/code/openam/products/amserver/source/com/iplanet/dpro/session/Session.java" 47636 42949 1 nil nil 47713 (overwrite-mode)) ("~/.tmux.conf" 425 nil 1 nil nil 424 (overwrite-mode)) ("~/code/borabora_api/spec/requests/clear_session_on_destroy_user_spec.rb" 2122 422 1 nil nil 2122 (overwrite-mode)) ("~/code/borabora_api/spec/support/database_cleaner.rb" 1491 1599 1 nil nil 1491 (overwrite-mode)) ("~/code/borabora_api/spec/support/blueprints/user.rb" 307 414 1 nil nil 447 (overwrite-mode)) ("~/code/borabora_api/spec/support/blueprints/user_for_authorization.rb" 464 424 1 nil nil 456 (overwrite-mode)) ("~/code/borabora_api/spec/requests/group_sort_spec.rb" 1 1751 1 nil nil 712 (overwrite-mode)) ("~/code/borabora_api/app/models/device.rb" 732 907 1 nil nil 1130 (overwrite-mode)) ("~/code/borabora_api/db/drop_table.rb" 209 182 1 nil nil 204 (overwrite-mode)) ("~/code/borabora_api/db/drop_view.rb" 256 230 1 nil nil 137 (overwrite-mode)) ("~/code/borabora_api/db/migrate/20120229000002_create_devices.rb" 351 405 1 nil nil 351 (overwrite-mode)) ("~/code/borabora_api/db/migrate/20120229000000_create_users.rb" 371 1800 1 nil nil 2057 (overwrite-mode)) ("~/code/borabora_api/db/migrate/20120229000001_create_organizations.rb" 469 480 1 nil nil 469 (overwrite-mode)) ("~/code/borabora_api/db/migrate/20120206045916_drop_users_groups.rb" 373 116 1 nil nil 373 (overwrite-mode)) ("~/code/borabora_api/app/controllers/devices_controller.rb" 3352 3571 1 nil nil 1293 (overwrite-mode)) ("~/code/borabora_api/spec/requests/simultaneous_create_spec.rb" 86 5152 1 nil nil 117 (overwrite-mode))))
(setq-default file-name-history '("~/.dotfiles/.emacs.d/init.el" "~/.dotfiles/.bash_profile" "~/hoge.diff" "~/code/openam/products/amserver/source/com/sun/identity/sm/ldap/SMSLdapObject.java" "~/reST/nsp-docs/_themes/bootstrap/static/bootstrap.css" "~/reST/nsp-docs/Acapulco/Review.rst" "~/reST/nsp-docs/Acapulco.rst" "~/reST/nsp-docs/Binsuke/Test/Random.rst" "~/reST/nsp-docs/Borabora/ExternalDesign/API_O.rst" "~/reST/nsp-docs/Borabora/ExternalDesign/API_U.rst" "~/reST/nsp-docs/Borabora/ExternalDesign/API_C.rst" "~/reST/trac_to_sphinx/format.rb" "~/reST/trac_to_sphinx/cleanup.sh" "~/rest/nsp-docs/index.rst" "~/rest/trac_to_sphinx/_convert/trac/nsp/wiki/Borabora/ExternalDesign/API_C.rst" "~/rest/trac_to_sphinx/_convert/trac/nsp/wiki/Dubai/DesignDoc.rst" "~/rest/trac_to_sphinx/_convert/trac/nsp/wiki/Dubai.rst" "~/rest/trac_to_sphinx/_convert/trac/nsp/wiki/RSearch.rst" "~/rest/trac_to_sphinx/_convert/trac/nsp/wiki/WikiNewPage.rst" "~/rest/trac_to_sphinx/_convert/trac/nsp/wiki/Manual/Subversion.rst" "~/rest/trac_to_sphinx/_target/trac/nsp/wiki/MQ.rst" "~/rest/trac_to_sphinx/_target/trac/nsp/wiki/API.rst" "~/rest/trac_to_sphinx/_target/trac/nsp/wiki/Borabora.rst" "~/rest/trac_to_sphinx/_target/trac/nsp/wiki/Borabora/ExternalDesign/API.rst" "~/rest/trac_to_sphinx/_target/trac/nsp/wiki/Borabora/ExternalDesign/API_U.rst" "~/code/borabora_api/spec/support/device_examples.rb" "~/code/borabora_api/spec/controllers/show_devices_spec.rb" "~/code/borabora_api/spec/controllers/create_devices_spec.rb" "~/code/borabora_api/app/controllers/devices_controller.rb" "~/trac_wiki_to_rest/convert.rb"))
(setq-default search-ring '("auto-complete" "RSense" "Emacs Load" "wind" "Show a" "eshell" "japanese" "diff -ur" "enableProxy" "dlayer" "808080" "8080" "replace_image" "Figure" "results" "remove_session"))
(setq-default anything-c-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar \.\.\. command-history)) (type . sexp)))
(setq-default anything-c-source-extended-command-history '((name . "Emacs Commands History") (candidates . extended-command-history) (type . command)))
(setq-default anything-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (match anything-c-match-on-file-name anything-c-match-on-directory-name) (type . file)))
(setq-default anything-c-source-global-mark-ring '((name . "global-mark-ring") (candidates . anything-c-source-global-mark-ring-candidates) (action ("Goto line" lambda \.\.\. \.\.\.)) (persistent-action lambda (candidate) (let \.\.\. \.\.\. \.\.\. \.\.\.)) (persistent-help . "Show this line")))
(setq-default anything-c-source-kill-ring '((name . "Kill Ring") (init lambda nil (anything-attrset \.\.\. last-command)) (candidates . anything-c-kill-ring-candidates) (action . anything-c-kill-ring-action) (last-command) (migemo) (multiline)))
(setq-default anything-c-source-mark-ring '((name . "mark-ring") (init lambda nil (setq anything-mark-ring-cache \.\.\.)) (candidates lambda nil (anything-aif anything-mark-ring-cache it)) (action ("Goto line" lambda \.\.\. \.\.\.)) (persistent-action lambda (candidate) (anything-goto-line \.\.\.) (anything-match-line-color-current-line)) (persistent-help . "Show this line")))
(setq-default anything-c-source-minibuffer-history '((name . "Minibuffer History") (header-name lambda (name) (format "%s (%s)" name minibuffer-history-variable)) (candidates lambda nil (let \.\.\. \.\.\.)) (migemo) (action . insert)))
(setq-default anything-c-source-projects-history '((name . "Projects history") (candidates lambda nil ap:history) (action ("anything project" lambda \.\.\. \.\.\.))))
(setq-default command-history '((find-file "~/.dotfiles/.emacs.d/init.el" t) (find-file "~/.dotfiles/.bash_profile" t) (query-replace "☆" "," nil (if \.\.\. \.\.\.) (if \.\.\. \.\.\.)) (find-file "~/reST/nsp-docs/Borabora/ExternalDesign/API_O.rst" t) (goto-line 199 nil) (goto-line 158 nil) (query-replace " |" "  |" nil (if \.\.\. \.\.\.) (if \.\.\. \.\.\.)) (find-file "~/reST/trac_to_sphinx/format.rb" t) (find-file "~/rest/nsp-docs/index.rst" t) (find-file "~/rest/trac_to_sphinx/_convert/trac/nsp/wiki/Borabora/ExternalDesign/API_C.rst" t) (find-file "~/rest/trac_to_sphinx/_convert/trac/nsp/wiki/Dubai/DesignDoc.rst" t) (find-file "~/rest/trac_to_sphinx/_convert/trac/nsp/wiki/Dubai.rst" t) (find-file "~/rest/trac_to_sphinx/_convert/trac/nsp/wiki/RSearch.rst" t) (find-file "~/rest/trac_to_sphinx/_convert/trac/nsp/wiki/WikiNewPage.rst" t) (find-file "~/rest/trac_to_sphinx/_convert/trac/nsp/wiki/Manual/Subversion.rst" t) (find-file "~/rest/trac_to_sphinx/_target/trac/nsp/wiki/MQ.rst" t) (find-file "~/rest/trac_to_sphinx/_target/trac/nsp/wiki/API.rst" t) (find-file "~/rest/trac_to_sphinx/_target/trac/nsp/wiki/Borabora.rst" t) (find-file "~/rest/trac_to_sphinx/_target/trac/nsp/wiki/Borabora/ExternalDesign/API.rst" t) (find-file "~/code/borabora_api/spec/support/device_examples.rb" t) (find-file "~/code/borabora_api/spec/controllers/show_devices_spec.rb" t) (find-file "~/code/borabora_api/spec/controllers/destroy_users_spec.rb" t) (find-file "~/code/borabora_api/lib/ssoadm.rb" t) (find-file "~/code/borabora_api/app/controllers/users_controller.rb" t) (query-replace "fatal" "error" nil (if \.\.\. \.\.\.) (if \.\.\. \.\.\.)) (find-file "~/code/borabora_api/spec/controllers/show_me_users_spec.rb" t) (find-file "~/code/borabora_api/spec/controllers/create_organizations_spec.rb" t) (find-file "~/code/borabora_api/spec/models/organization/create_with_realm_spec.rb" t) (find-file "~/code/borabora_api/app/models/organization.rb" t) (find-file "~/code/borabora_api/spec/models/organization_spec.rb" t) (find-file "~/code/borabora_api/db/seeds.rb" t)))
(setq-default extended-command-history '("goto-line" "indent-region" "ruby-mode"))
(setq-default grep-files-history '("ch" "el"))
(setq-default minibuffer-history '("199" "158" "" "S" "Session.java" "user" "m"))
(setq-default query-replace-history '("," "☆" "  |" " |" "error" "fatal" "karachi" "organization_id" "'karachi'" "create_user('karachi', {" "User.make!(:organization_id => 'karachi', " "User.make!(:seed, :organization_id => 'karachi', " "create_organization" "Organization.create!" "create!" "make!" "', :ssh do" "' do" "message" "outputs" "Rails.logger" "logger" "#{" "files" "targets" "output" "ouput" "realm" "uid" "filter"))
(setq-default yes-or-no-p-history '("yes"))
